---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Bastion Host for Boltlabs Infrastructure'

Metadata:
  LICENSE: Apache License, Version 2.0
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VpcId
          - SubnetIds
      - Label:
          default: Amazon EK2 Control Plane Configuration
        Parameters:
          - ControlPlane
      - Label:
          default: Amazon EC2 Linux Bastion Configuration
        Parameters:
          - BastionRole
          - BastionSecurityGroup
#          - NodeSecurityGroup
          - BastionAMIOS
          - NumBastionHosts
          - KeyPairName
#          - AlternativeIAMRole
          - BastionBanner
          - InstanceType
          - RootVolumeSize
          - QSS3BucketName
          - QSS3KeyPrefix
          - RemoteAccessCIDR
          - EnvironmentVariables
          - RootVolumeSize

Parameters:

  VpcId:
    Description: 'The VPC Identifier'
    Type: 'AWS::EC2::VPC::Id'
    
  ControlPlane:
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster
    Type: String

  SubnetIds:
    Description: 'The list of SubnetIds in the Virtual Private Cloud (VPC)'
    Type: 'List<AWS::EC2::Subnet::Id>'

  BastionRole:
    Description: The service role for the Bastion instances
#    Type: 'AWS::IAM::Role'
    Type: String

  BastionSecurityGroup:
    Description: The service role for the Bastion instances
    Type: 'AWS::EC2::SecurityGroup::Id'

  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - CentOs-7-HVM
      - Ubuntu-Server-14.04-LTS-HVM
      - Ubuntu-Server-16.04-LST-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  
  BastionBanner:
    Default: https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt
    Description: Banner text to display upon login
    Type: String

  InstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.medium
    Description: Amazon EC2 instance type for the bastion instances
    Type: String

#  AlternativeIAMRole:
#    Description: Specify an existing IAM Role name to attach to the bastion, if left blank
#      a new role will be created.
#    Default: ''
#    Type: String

  KeyPairName:
    Description: Enter a Public/private key pair for the bastion host. If you do not have one in this region,
      please create it before continuing
    Type: 'AWS::EC2::KeyPair::KeyName'

  NumBastionHosts:
    AllowedValues:
      - '1'
#      - '2'
#      - '3'
#      - '4'
    Default: '1'
    Description: Enter the number of bastion hosts to create
    Type: String

  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String

  QSS3KeyPrefix:
    AllowedPattern: '^([0-9a-zA-Z-.]+/)*$'
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), dots (.) and forward slash (/). The prefix should
      end with a forward slash (/).
    Default: quickstart-linux-bastion/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), dots
      (.) and forward slash (/) and it should end with a forward slash (/).
    Type: String

#  RemoteAccessCIDR:
#    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
#    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
#    Description: Allowed CIDR block for external SSH access to the bastions
#    Default: 0.0.0.0/0
#    Type: String
      
  EnvironmentVariables:
    Description: Specify a comma separated list of environment variables for use in
      bootstrapping. Variables must be in the format KEY=VALUE. VALUE cannot
      contain commas
    Type: String
    Default: ''

  RootVolumeSize:
    Description: Specify a size in GB for the root EBS volume
    Type: Number
    Default: '10'

Rules:
  SubnetsInVPC:
    Assertions:
      - Assert:
          'Fn::EachMemberIn':
            - 'Fn::ValueOfAll':
                - 'AWS::EC2::Subnet::Id'
                - VpcId
            - 'Fn::RefAll': 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must exist in the VPC

Mappings:
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2018.03.0.20181129-x86_64-gp2
      CENTOS7HVM: CentOS Linux 7 x86_64 HVM EBS ENA
        1805_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-77ec9308.4
      US1404HVM: ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20181022
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20181223
      SLES15HVM: suse-sles-15-v20180816-hvm-ssd-x86_64
    ap-northeast-1:
      AMZNLINUXHVM: ami-04b2d1589ab1d972c
      CENTOS7HVM: ami-045f38c93733dd48d
      US1404HVM: ami-019f92b9a431da6ed
      US1604HVM: ami-096c57cee908da809
      SLES15HVM: ami-056ac8ad44e6a7e1f
    ap-northeast-2:
      AMZNLINUXHVM: ami-0be3e6f84d3b968cd
      CENTOS7HVM: ami-06cf2a72dadf92410
      US1404HVM: ami-0d4d670cc80f5ffcb
      US1604HVM: ami-0a25005e83c56767a
      SLES15HVM: ami-0f81fff879bafe6b8
    ap-south-1:
      AMZNLINUXHVM: ami-0b99c7725b9484f9e
      CENTOS7HVM: ami-02e60be79e78fef21
      US1404HVM: ami-04242e05c1ebface0
      US1604HVM: ami-03dcedc81ea3e7e27
      SLES15HVM: ami-01be89269d32f2a16
    ap-southeast-1:
      AMZNLINUXHVM: ami-0fb6b6f9e81056553
      CENTOS7HVM: ami-0b4dd9d65556cac22
      US1404HVM: ami-0e820d9e86a7efa3c
      US1604HVM: ami-04613ff1fdcd2eab1
      SLES15HVM: ami-070356c21596ddc67
    ap-southeast-2:
      AMZNLINUXHVM: ami-075caa3491def750b
      CENTOS7HVM: ami-08bd00d7713a39e7d
      US1404HVM: ami-07e6faad15db3b345
      US1604HVM: ami-000c2343cf03d7fd7
      SLES15HVM: ami-0c4245381c67efb39
    ca-central-1:
      AMZNLINUXHVM: ami-0a67d15f2858e33cb
      CENTOS7HVM: ami-033e6106180a626d0
      US1404HVM: ami-08e88818d065cbc38
      US1604HVM: ami-0eb3e12d3927c36ef
      SLES15HVM: ami-0c97d9b588207dad6
    eu-central-1:
      AMZNLINUXHVM: ami-026d3b3672c6e7b66
      CENTOS7HVM: ami-04cf43aca3e6f3de3
      US1404HVM: ami-067ee10914e74ffee
      US1604HVM: ami-0085d4f8878cddc81
      SLES15HVM: ami-05dfd265ea534a3e9
    eu-north-1:
      AMZNLINUXHVM: ami-8c169ef2
      CENTOS7HVM: ami-5ee66f20
      US1404HVM: ami-9bd55ee5
      US1604HVM: ami-4bd45f35
      SLES15HVM: ami-0741fa1a008af40ad
    eu-west-1:
      AMZNLINUXHVM: ami-0862aabda3fb488b5
      CENTOS7HVM: ami-0ff760d16d9497662
      US1404HVM: ami-0e52b5f0b50d5c811
      US1604HVM: ami-03746875d916becc0
      SLES15HVM: ami-0a58a1b152ba55f1d
    eu-west-2:
      AMZNLINUXHVM: ami-0bdfa1adc3878cd23
      CENTOS7HVM: ami-0eab3a90fc693af19
      US1404HVM: ami-082f73b60cd9b99b2
      US1604HVM: ami-0cbe2951c7cd54704
      SLES15HVM: ami-01497522185aaa4ee
    eu-west-3:
      AMZNLINUXHVM: ami-05b93cd5a1b552734
      CENTOS7HVM: ami-0e1ab783dc9489f34
      US1404HVM: ami-02931cc68ee602ff1
      US1604HVM: ami-080d4d4c37b0aa206
      SLES15HVM: ami-0f238bd4c6fdbefb0
    sa-east-1:
      AMZNLINUXHVM: ami-0bb96001cf2299257
      CENTOS7HVM: ami-0b8d86d4bf91850af
      US1404HVM: ami-0e2e39cc84e09ff83
      US1604HVM: ami-09beb384ba644b754
      SLES15HVM: ami-0772af912976aa692
    us-east-1:
      AMZNLINUXHVM: ami-035b3c7efe6d061d5
      CENTOS7HVM: ami-02eac2c0129f6376b
      US1404HVM: ami-00d4e9ff62bc40e03
      US1604HVM: ami-0cfee17793b08a293
      SLES15HVM: ami-0b1764f3d7d2e2316
    us-east-2:
      AMZNLINUXHVM: ami-02f706d959cedf892
      CENTOS7HVM: ami-0f2b4fc905b0bd1f1
      US1404HVM: ami-0c929bde1796e1484
      US1604HVM: ami-0f93b5fd8f220e428
      SLES15HVM: ami-05ea824317ffc0c20
    us-west-1:
      AMZNLINUXHVM: ami-0fcdcdb074d2bac5f
      CENTOS7HVM: ami-074e2d6769f445be5
      US1404HVM: ami-026e9e583bf07479b
      US1604HVM: ami-09eb5e8a83c7aa890
      SLES15HVM: ami-00e34a7624e5a7107
    us-west-2:
      AMZNLINUXHVM: ami-0f2176987ee50226e
      CENTOS7HVM: ami-01ed306a12b7d1c96
      US1404HVM: ami-027386b91d3c0bf78
      US1604HVM: ami-0b37e9efc396e4c38
      SLES15HVM: ami-0f1e3b3fb0fec0361
  LinuxAMINameMap:
    Amazon-Linux-HVM:
      Code: AMZNLINUXHVM
    CentOS-7-HVM:
      Code: CENTOS7HVM
    Ubuntu-Server-14.04-LTS-HVM:
      Code: US1404HVM
    Ubuntu-Server-16.04-LTS-HVM:
      Code: US1604HVM
    SUSE-SLES-15-HVM:
      Code: SLES15HVM

#Conditions:
#  CreateIAMRole: !Equals 
#    - !Ref AlternativeIAMRole
#    - ''
      
Resources:

  BastionMainLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub ${AWS::StackName}-BastionLogGroup
      RetentionInDays: 14
  SSHMetricFilter:
    Type: 'AWS::Logs::MetricFilter'
    Properties:
      LogGroupName: !Ref BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: '1'
          MetricNamespace: !Join 
            - /
            - - AWSQuickStart
              - !Ref 'AWS::StackName'

#  BastionRole:
#    Condition: CreateIAMRole
#    Type: 'AWS::IAM::Role'
#    Properties:
#      Path: /
#      AssumeRolePolicyDocument:
#        Statement:
#          - Action:
#              - 'sts:AssumeRole'
#            Principal:
#              Service:
#                - ec2.amazonaws.com
#            Effect: Allow
#        Version: 2012-10-17
#      ManagedPolicyArns:
#        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'

  BastionPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: BastionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Resource: 
              - !Sub 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
            Effect: Allow
          - Action:
              - 'logs:CreateLogStream'
              - 'logs:GetLogEvents'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:PutRetentionPolicy'
              - 'logs:PutMetricFilter'
              - 'logs:CreateLogGroup'
            Resource: 
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
            Effect: Allow
          - Action:
              - 'ec2:AssociateAddress'
              - 'ec2:DescribeAddresses'
            Resource: '*'
            Effect: Allow
          - Action:
              - 'eks:*'
            Resource:
              - !Sub arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/${ControlPlane}
            Effect: Allow
      Roles:
        - !Ref BastionRole

#        - !If 
#          - CreateIAMRole
#          - !Ref BastionRole
#          - !Ref AlternativeIAMRole

  BastionProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref BastionRole
      Path: /

#  BastionSecurityGroupIngress22:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      Description: Allow SSH access to bastion instances
#      GroupId: !Ref BastionSecurityGroup
#      IpProtocol: tcp
#      FromPort: 22
#      ToPort: 22
#      CidrIp: !Ref RemoteAccessCIDR


#  BastionSecurityGroupIngressICMP:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      Description: Allow ICMP access to bastion instances
#      GroupId: !Ref BastionSecurityGroup
#      IpProtocol: tcp
#      FromPort: -1
#      ToPort: -1
#      CidrIp: !Ref RemoteAccessCIDR


#  BastionToNodeSecurityGroupIngress:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      Description: Allow bastion nodes to have access to worker nodes via SSH
#      GroupId: !Ref NodeSecurityGroup
#      SourceSecurityGroupId: !Ref BastionSecurityGroup
#      IpProtocol: tcp
#      FromPort: 22
#      ToPort: 22


  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  BastionAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      VPCZoneIdentifier: !Ref SubnetIds
      MinSize: !Ref NumBastionHosts
      MaxSize: !Ref NumBastionHosts
      Cooldown: '300'
      DesiredCapacity: !Ref NumBastionHosts
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-LinuxBastion
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumBastionHosts
        Timeout: PT30M

  BastionLaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref BastionRole
          buckets:
            - !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        config:
          files:
            /tmp/bastion_bootstrap.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            b-bootstrap:
              command: !Join 
                - ''
                - - ./tmp/bastion_bootstrap.sh
                  - ' --banner '
                  - !Ref BastionBanner
                  - ' --enable true'
                  - ' --tcp-forwarding true'
                  - ' --x11-forwarding false'
    Properties:
      AssociatePublicIpAddress: true
      PlacementTenancy: default
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref BastionProfile
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - !FindInMap
          - LinuxAMINameMap
          - !Ref BastionAMIOS
          - Code
      SecurityGroups:
#        - !Ref SecurityGroup
        - !Ref BastionSecurityGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              set -x
            - for e in $(echo "
            - !Ref EnvironmentVariables
            - |
              " | tr ',' ' '); do 
            - |2
                export $e 
            - |
              done 
            - |
              export PATH=$PATH:/usr/local/bin
            - |
              which pip &> /dev/null
            - |
              if [ $? -ne 0 ] ; then
            - |2
                  echo "PIP NOT INSTALLED"
            - |2
                  [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
            - |2
                  [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            - |2
                  [ `which zypper` ] && zypper refresh && zypper install -y python-pip && update-alternatives --set easy_install /usr/bin/easy_install-2.7 && echo "PIP INSTALLED"
            - |
              fi
            - |
              pip install --upgrade pip &> /dev/null
            - |
              pip install awscli --ignore-installed six &> /dev/null
            - >
              easy_install
              https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - EIP_LIST="
            - !Ref EIP
            - |
              "
            - CLOUDWATCHGROUP=
            - !Ref BastionMainLogGroup
            - |+
            
            - EKS_CLUSTER_NAME=
            - !Ref ControlPlane
            - |+

            - 'cfn-init -v --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionLaunchConfiguration --region '
            - !Ref 'AWS::Region'
            - |+

            - 'cfn-signal -e $? --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionAutoScalingGroup --region '
            - !Ref 'AWS::Region'
            - |+


Outputs:
    
  BastionAutoScalingGroup:
    Description: Auto Scaling Group Reference ID
    Value: !Ref BastionAutoScalingGroup
    Export:
      Name: !Sub '${AWS::StackName}-AutoScalingGroup'

  EIP:
    Description: Elastic IP for Bastion Host
    Value: !Ref EIP
    Export:
      Name: !Sub '${AWS::StackName}-EIP'

  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionMainLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchLogs'

  BastionSecurityGroup:
    Description: Bastion Security Group
    Value: !Ref BastionSecurityGroup
#    Value: !Ref SecurityGroup
#    Export:
#      Name: !Sub '${AWS::StackName}-SecurityGroup'

  BastionRole:
    Description: Bastion IAM Role name
    Value: ! BastionRole

#    Value: !If 
#      - CreateIAMRole
#      - !Ref BastionRole
#      - !Ref AlternativeIAMRole
#    Export:
#      Name: !Sub '${AWS::StackName}-BastionRole'
